commands :

1) kubectl create deployment myproject --image=docker.io/kumarbavandla/go-web-hello-world:v0.1

result:
-------
$kubectl get services
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   87m

$ kubectl get deployments
NAME        READY   UP-TO-DATE   AVAILABLE   AGE
myproject   1/1     1            1           28m
kumar@k8node:~$

2) exposing the port 
$ kubectl expose deployment/myproject --type="NodePort" --port 8081
service/myproject exposed

Note: it exposed to a random port(32273) which is expected as I read from the internet. To expose a specific port, looks a service 
definition file has to be prepared accordingly and apply (kubectl apply -f ..)

However, I have updated the port forwarding in virtual box for this random port (32273) and I could see the message from the service.

$ kubectl describe services/myproject
Name:                     myproject
Namespace:                default
Labels:                   app=myproject
Annotations:              <none>
Selector:                 app=myproject
Type:                     NodePort
IP:                       10.96.114.86
Port:                     <unset>  8081/TCP
TargetPort:               8081/TCP
NodePort:                 <unset>  32273/TCP
Endpoints:                <none>
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>

3) dashboard deployed using "recommended" way following the https://github.com/kubernetes/dashboard/blob/master/docs/user/installation.md
and exposed the service via NodePort, there by to my host machine accordingly.
Since the service is exposed over https, I tried to install the self signed certificate (https://github.com/kubernetes/dashboard/blob/master/docs/user/certificate-management.md#self-signed-certificate)
however, I could not manage to apply them when the dashboard service is running already. 
May be I should have setup all this before I deploy the dashboard, but I am not sure..

